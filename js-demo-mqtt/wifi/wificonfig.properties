# Copyright 2019-2021 MicroEJ Corp. All rights reserved.
# This library is provided in source code for use, modification and test, subject to license terms.
# Any modification of the source code will break MicroEJ Corp. warranties on the whole library.
#
# WiFi's mock configuration
# ------------------------------------
# ej.ecom.wifi.mock.capability  default value : 2
# ------------------------------------
# ej.ecom.wifi.mock.capability is the chip capabilities:
#	/**
#	 * The Wi-Fi module can act as a client and as an access point but not at
#	 * the same time.
#	 */
#	public static final int BOTH_EXCLUSIVE = 0;
#	/**
#	 * The Wi-Fi module can act as a client and as an access point at the same
#	 * time.
#	 */
#	public static final int BOTH_SIMULTANEOUS = 1;
#	/**
#	 * Client.
#	 *
#	 * It is possible to join an existing wireless networks. The Wi-Fi module
#	 * acts as a client.
#	 */
#	public static final int CLIENT = 2;
#	/**
#	 * SoftAP.
#	 *
#	 * It is possible to create a new wireless network. The Wi-Fi module acts as
#	 * a access point.
#	 */
#	public static final int SOFT_AP = 3;
#
# ------------------------------------
# ej.ecom.wifi.mock.bssid  default value : random
# ------------------------------------
# 
# bssid value should be described as a string of byte in hex values seperated by ':'
# e.g. 01:02:03:04:05:06
#
# ------------------------------------
# ej.ecom.wifi.mock.wps  default value : 0
# ------------------------------------
#	/**
#	 * No method.
#	 */
#	public static final int NONE = 0;
#	/**
#	 * Near Field Communication (NFC) method.
#	 */
#	public static final int NFC = 1;
#	/**
#	 * Personal Identification Number (PIN) method.
#	 */
#	public static final int PIN = 2;
#	/**
#	 * Push button method.
#	 */
#	public static final int PUSHBUTTON = 4;
#	/**
#	 * USB method.
#	 */
#	public static final int USB = 8;
#
# ------------------------------------
# ej.ecom.wifi.mock.ap.[X].[property]
# ------------------------------------
# The WiFi mock will looks for AP using the pattern ej.ecom.wifi.mock.ap.[X] where X is the AP order (it will start at 0 and continue as long as X+1 exists)
# Available properties are:
# ej.ecom.wifi.mock.ap.[X].ssid=[SSID] compulsory
# ej.ecom.wifi.mock.ap.[X].password=[SSID] empty if none default value : none
# ej.ecom.wifi.mock.ap.[X].rssi=[RSSI value]  default value : random
# ej.ecom.wifi.mock.ap.[X].bssid=bssid  default value : random
# ej.ecom.wifi.mock.ap.[X].security=[SECURITY MODE value]  default value : 6
#	/**
#	 * Enterprise NO security.
#	 */
#	public static final int ENTERPRISE_NO_SECURITY = 0;
#	/**
#	 * Enterprise WPA mixed.
#	 */
#	public static final int ENTERPRISE_WPA_MIXED = 1;
#	/**
#	 * Enterprise WPA1.
#	 */
#	public static final int ENTERPRISE_WPA1 = 2;
#	/**
#	 * Enterprise WPA2.
#	 */
#	public static final int ENTERPRISE_WPA2 = 3;
#	/**
#	 * Enterprise WEP.
#	 */
#	public static final int ENTERPRISE_WEP = 4;
#	/**
#	 * MIXED (WPA1 / WPA2).
#	 */
#	public static final int MIXED = 5;
#	/**
#	 * Open (no authentification).
#	 */
#	public static final int OPEN = 6;
#	/**
#	 * WEP 128.
#	 */
#	public static final int WEP128 = 7;
#	/**
#	 * WEP 64.
#	 */
#	public static final int WEP64 = 8;
#	/**
#	 * WPA1.
#	 */
#	public static final int WPA1 = 9;
#	/**
#	 * WPA2.
#	 */
#	public static final int WPA2 = 10;
#
# ej.ecom.wifi.mock.ap.[X].wps=[wps value] default value : 0
#	/**
#	 * No method.
#	 */
#	public static final int NONE = 0;
#	/**
#	 * Near Field Communication (NFC) method.
#	 */
#	public static final int NFC = 1;
#	/**
#	 * Personal Identification Number (PIN) method.
#	 */
#	public static final int PIN = 2;
#	/**
#	 * Push button method.
#	 */
#	public static final int PUSHBUTTON = 4;
#	/**
#	 * USB method.
#	 */
#	public static final int USB = 8;

ej.ecom.wifi.mock.ap.0.bssid=0a:42:34:95:a4:f2
ej.ecom.wifi.mock.ap.0.channel=11
ej.ecom.wifi.mock.ap.0.rssi=-13.0
ej.ecom.wifi.mock.ap.0.security=6
ej.ecom.wifi.mock.ap.0.ssid=myFirstSSid
ej.ecom.wifi.mock.ap.0.wps=0
ej.ecom.wifi.mock.ap.1.bssid=c9:3f:db:06:bf:c4
ej.ecom.wifi.mock.ap.1.channel=7
ej.ecom.wifi.mock.ap.1.password=123456
ej.ecom.wifi.mock.ap.1.rssi=-88.0
ej.ecom.wifi.mock.ap.1.security=10
ej.ecom.wifi.mock.ap.1.ssid=mySecondSSid
ej.ecom.wifi.mock.ap.1.wps=0
ej.ecom.wifi.mock.bssid=ab:d7:58:98:71:80
ej.ecom.wifi.mock.capability=0
ej.ecom.wifi.mock.wps=0
